{"version":3,"sources":["components/Navbar.js","components/SearchForm.js","components/Table.js","components/Search.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","SearchForm","props","searchTerm","handleInputChange","employee","name","list","type","value","onChange","placeholder","id","length","map","emp","first","last","Table","class","scope","onClick","handleSort","employeeList","alt","src","picture","medium","email","dob","date","phone","location","city","Search","state","originalList","sortedType","event","target","setState","console","log","filteredEmployeeList","filter","toLowerCase","includes","sortedEmployeeList","sortedTypeVal","sort","a","b","nameA","nameB","localeCompare","this","fetchEmployeeDetails","axios","get","then","res","data","results","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3f3add4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar() {\r\n    // const location = useLocation();\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg justify-content-center navbar-light bg-primary\">\r\n            <h1 className=\"text-center text-white font-wight-bold\">Employee Directory</h1>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    const { searchTerm, handleInputChange, employee } = props;\r\n    return (<>\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <br />\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"searchTerm\"\r\n                    list=\"employee\"\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={handleInputChange}\r\n                    placeholder={`Search`}\r\n                />\r\n                <datalist id=\"employee\">\r\n                    {employee && employee.length > 0 ? employee.map(emp => (\r\n                        <option value={emp.name.first + \" \" + emp.name.last} key={emp.id} />\r\n                    )) : <></>}\r\n                </datalist>\r\n\r\n            </div>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\n\r\nfunction Table(props) {\r\n    // console.log(props);\r\n    return (\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th scope=\"col\" onClick= {props.handleSort}>\r\n                        Name\r\n                    </th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">D.O.B</th>\r\n                    <th scope=\"col\">Phone</th>\r\n                    <th scope=\"col\">Location</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.employeeList.length > 0 ? props.employeeList.map(\r\n                        employee => {\r\n                            return (\r\n                                <tr key={employee.id}>\r\n                                    <td>\r\n                                        <img alt={employee.name.first} src={employee.picture.medium} />\r\n                                    </td>\r\n                                    <td>{employee.name.first + \" \" + employee.name.last} </td>\r\n                                    <td>{employee.email}</td>\r\n                                    <td>{employee.dob.date}</td>\r\n                                    <td>{employee.phone}</td>\r\n                                    <td>{employee.location.city}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    ) : (\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        )\r\n                }\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nexport default Table;","import React from \"react\";\r\nimport { Component } from 'react';\r\nimport { getEmployeeDetails } from '../utils/API';\r\nimport SearchForm from './SearchForm';\r\nimport Table from \"./Table\";\r\n\r\n// Search for a Employee\r\n// hit the API\r\n// Show the Employee records\r\nclass Search extends Component {\r\n    state = {\r\n        searchTerm: \"\",\r\n        employeeList: [],\r\n        originalList: [],\r\n        sortedType: \"ascend\"\r\n    }\r\n    \r\n    //default method when page loads\r\n    componentDidMount() {\r\n        this.fetchEmployeeDetails();\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        console.log(value);\r\n\r\n        // filters the employeelist by name\r\n        const filteredEmployeeList = this.state.originalList.filter(employee => {\r\n            return (employee.name.first.toLowerCase() + \" \" + employee.name.last.toLowerCase()).includes(value.toLowerCase()) || employee.name.first.toLowerCase().includes(value.toLowerCase()) ||\r\n                employee.name.last.toLowerCase().includes(value.toLowerCase());\r\n        })\r\n        //console.log(filteredEmployeeList);\r\n\r\n        this.setState({\r\n            employeeList: filteredEmployeeList\r\n        });\r\n\r\n    }\r\n\r\n    // sorts the table by name in ascending and descending order\r\n    handleSort = () => {\r\n        let sortedTypeVal = this.state.sortedType;\r\n        let sortedEmployeeList;\r\n        if (sortedTypeVal === \"ascend\") {\r\n\r\n            sortedTypeVal = \"descend\"\r\n            sortedEmployeeList =\r\n                this.state.employeeList.sort(function (a, b) {\r\n\r\n                    var nameA = a.name.first.toLowerCase() + \" \" + a.name.last.toLowerCase()\r\n                    var nameB = b.name.first.toLowerCase() + \" \" + b.name.last.toLowerCase();\r\n                    return nameA.localeCompare(nameB);\r\n\r\n\r\n                })\r\n\r\n        }\r\n        else {\r\n            sortedTypeVal = \"ascend\"\r\n            sortedEmployeeList =\r\n                this.state.employeeList.sort(function (a, b) {\r\n\r\n                    var nameA = a.name.first.toLowerCase() + \" \" + a.name.last.toLowerCase()\r\n                    var nameB = b.name.first.toLowerCase() + \" \" + b.name.last.toLowerCase();\r\n                    return nameB.localeCompare(nameA);\r\n                })\r\n        }\r\n\r\n        console.log(sortedTypeVal);\r\n        this.setState({\r\n            sortedType: sortedTypeVal,\r\n            employeeList: sortedEmployeeList\r\n        });\r\n\r\n    }\r\n\r\n    // fetches employee details\r\n    fetchEmployeeDetails() {\r\n        getEmployeeDetails().then(res => {\r\n\r\n            this.setState({ employeeList: res.data.results, originalList: res.data.results })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <SearchForm\r\n                            handleInputChange={this.handleInputChange}\r\n                            searchTerm={this.searchTerm}\r\n                            employee={this.state.employeeList}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <Table\r\n                    handleSort={this.handleSort}\r\n                    employeeList={this.state.employeeList}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nexport function getEmployeeDetails(){\r\n    return axios.get('https://randomuser.me/api/?results=100')\r\n}\r\n\r\n\r\n\r\n","\nimport Navbar from \"./components/Navbar\";\nimport Search from './components/Search';\n\n\nexport default function App() {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Search />\n      </div>\n    </div>\n\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}